#!/bin/bash

# Pre-commit hook for Passant Prototype (Notes App)
# Runs code quality checks before allowing commits

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Running pre-commit checks...${NC}"

# Add common node paths to PATH
export PATH="/usr/local/bin:/opt/homebrew/bin:$PATH"

# Source nvm if available
[ -s "$HOME/.nvm/nvm.sh" ] && \. "$HOME/.nvm/nvm.sh"

# Ensure we're using the correct Node version
if command -v nvm >/dev/null 2>&1; then
    nvm use >/dev/null 2>&1 || true
fi

# Check if npm is available
if ! command -v npm >/dev/null 2>&1; then
    echo -e "${RED}‚ùå npm is not available in PATH${NC}"
    exit 1
fi

# Install dependencies if node_modules doesn't exist
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installing dependencies...${NC}"
    npm install
fi

# Run Prettier formatting check
echo -e "${YELLOW}üé® Running Prettier format check...${NC}"
if ! npm run format:check; then
    echo -e "${RED}‚ùå Prettier formatting issues found. Run 'npm run format' to fix them.${NC}"
    exit 1
fi

# Run ESLint
echo -e "${YELLOW}üîç Running ESLint...${NC}"
if ! npm run lint; then
    echo -e "${RED}‚ùå ESLint issues found. Run 'npm run lint:fix' to fix them.${NC}"
    exit 1
fi

# Run TypeScript type check
echo -e "${YELLOW}üîß Running TypeScript type check...${NC}"
if ! npx tsc --noEmit --skipLibCheck; then
    echo -e "${RED}‚ùå TypeScript type errors found. Please fix them before committing.${NC}"
    exit 1
fi

# Check if Expo dependencies are compatible (if expo is available)
if command -v npx >/dev/null 2>&1; then
    echo -e "${YELLOW}üì± Checking Expo compatibility...${NC}"
    if ! npx expo install --check >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  Expo dependency compatibility issues detected. Consider running 'npx expo install --fix'${NC}"
        # Don't fail the commit for this, just warn
    fi
fi

echo -e "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
exit 0